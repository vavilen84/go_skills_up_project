version: '3.8'

services:

  interngram-db-migrations:
    container_name: "migrate"
    build:
      dockerfile: ./docker/migrate/Dockerfile
      context: .
      args:
        WORKDIR: ${WORKING_DIR}
    env_file:
      - ".env"
    volumes:
      - ./migrations:${WORKING_DIR}/migrations
      - ./shell:${WORKING_DIR}/shell
    tty: true

  interngram-app:
    container_name: "app"
    build:
      context: ./
      dockerfile: ./docker/app/Dockerfile
      args:
        WORKDIR: ${WORKING_DIR}
    networks:
      - local
    depends_on:
      - interngram-db
    volumes:
      - ./app:${WORKING_DIR}
    env_file:
      - ".env"
    expose:
      - "8080"
    ports:
      - "8080:8080"

  interngram-pma:
    container_name: "pma"
    image: phpmyadmin/phpmyadmin
    ports:
      - "8081:80"
    environment:
      - PMA_ARBITRARY=1
    depends_on:
      - interngram-db
    networks:
      - local

  interngram-db:
    container_name: "db"
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - "3306:3306"
    expose:
      - "3306"
    networks:
      - local
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}

networks:
  local:
